#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º—ã –±–ª–æ–∫–æ–≤ ProThemesRU
"""

import os
import sys
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from site_blocks import (
    all_blocks, 
    get_blocks_by_category, 
    get_block_by_id,
    get_all_categories,
    get_blocks_count
)
from site_blocks.constructor import constructor
from site_blocks.export import export_all_formats

def demo_basic_usage():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±–ª–æ–∫–∏
    print(f"üì¶ –í—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ –±–ª–æ–∫–æ–≤: {len(all_blocks)}")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = get_all_categories()
    print(f"üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {', '.join(categories)}")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    counts = get_blocks_count()
    print("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–ª–æ–∫–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
    for category, count in counts.items():
        if category != 'total':
            print(f"   {category}: {count}")
    
    print(f"   –ò—Ç–æ–≥–æ: {counts['total']}")
    print()

def demo_block_examples():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ—Ä–æ–≤ –±–ª–æ–∫–æ–≤"""
    print("üé® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –ü—Ä–∏–º–µ—Ä—ã –±–ª–æ–∫–æ–≤")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∏–∑ –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for category in get_all_categories():
        blocks = get_blocks_by_category(category)
        if blocks:
            print(f"\nüìÅ {category.upper()}:")
            for block_id, block_data in list(blocks.items())[:3]:  # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 3
                print(f"   ‚Ä¢ {block_data['name']} (ID: {block_id})")
                print(f"     HTML: {block_data['html'][:50]}...")
                print(f"     –°–≤–æ–π—Å—Ç–≤–∞: {', '.join(block_data['properties'])}")
    
    print()

def demo_constructor_usage():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞"""
    print("üî® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞")
    print("=" * 50)
    
    # –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
    constructor.current_page_blocks = []
    
    # –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    print("–°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –±–ª–æ–∫–∏
    header = constructor.add_block_to_page('header')
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω {header['name']}")
    
    hero = constructor.add_block_to_page('hero_section')
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω {hero['name']}")
    
    about = constructor.add_block_to_page('about_section')
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω {about['name']}")
    
    contact_form = constructor.add_block_to_page('contact_form')
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω {contact_form['name']}")
    
    footer = constructor.add_block_to_page('footer')
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω {footer['name']}")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–ª–æ–∫–∏
    print("\n–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–ª–æ–∫–∏...")
    constructor.update_block_property(hero['id'], 'title', '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ProThemesRU!')
    constructor.update_block_property(hero['id'], 'subtitle', '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ —Å–∞–π—Ç—ã –∑–∞ –º–∏–Ω—É—Ç—ã')
    constructor.update_block_property(hero['id'], 'button-text', '–ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ')
    
    constructor.update_block_property(about['id'], 'title', '–û –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ')
    constructor.update_block_property(about['id'], 'content', 'ProThemesRU - —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-—Å–∞–π—Ç–æ–≤ –±–µ–∑ –Ω–∞–≤—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    print(f"\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ({len(constructor.current_page_blocks)} –±–ª–æ–∫–æ–≤):")
    for block in constructor.current_page_blocks:
        print(f"   {block['position'] + 1}. {block['name']} ({block['category']})")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML
    html = constructor.get_page_html()
    print(f"\nüìÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω HTML ({len(html)} —Å–∏–º–≤–æ–ª–æ–≤)")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    constructor.save_page('demo_page.json')
    print("üíæ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ demo_page.json")
    
    print()

def demo_advanced_features():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"""
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")
    print("=" * 50)
    
    # –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –±–ª–æ–∫–∞
    if constructor.current_page_blocks:
        original_block = constructor.current_page_blocks[0]
        duplicated = constructor.duplicate_block(original_block['id'])
        print(f"üîÑ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω –±–ª–æ–∫: {duplicated['name']}")
    
    # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –±–ª–æ–∫–∞
    if len(constructor.current_page_blocks) > 2:
        constructor.move_block(constructor.current_page_blocks[1]['id'], 0)
        print("‚ÜîÔ∏è –ë–ª–æ–∫ –ø–µ—Ä–µ–º–µ—â–µ–Ω –Ω–∞ –ø–µ—Ä–≤—É—é –ø–æ–∑–∏—Ü–∏—é")
    
    # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏
    if constructor.current_page_blocks:
        block = constructor.current_page_blocks[0]
        constructor.toggle_block_visibility(block['id'])
        print(f"üëÅÔ∏è –í–∏–¥–∏–º–æ—Å—Ç—å –±–ª–æ–∫–∞ '{block['name']}' –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞")
    
    # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –±–ª–æ–∫–∞
    if constructor.current_page_blocks:
        block = constructor.current_page_blocks[0]
        constructor.lock_unlock_block(block['id'])
        print(f"üîí –ë–ª–æ–∫ '{block['name']}' –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    
    # –û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è
    constructor.undo()
    print("‚Ü©Ô∏è –ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    
    print()

def demo_export_features():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π —ç–∫—Å–ø–æ—Ä—Ç–∞"""
    print("üì§ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –§—É–Ω–∫—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞")
    print("=" * 50)
    
    try:
        # –≠–∫—Å–ø–æ—Ä—Ç –≤–æ –≤—Å–µ—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
        print("–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–ª–æ–∫–∏ –≤–æ –≤—Å–µ—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö...")
        files = export_all_formats('demo_exports')
        
        print(f"üìÅ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")
        for file_path in files:
            file_size = os.path.getsize(file_path)
            print(f"   üìÑ {os.path.basename(file_path)} ({file_size} –±–∞–π—Ç)")
        
        print("‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞: {e}")
    
    print()

def demo_search_and_filter():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏"""
    print("üîç –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è")
    print("=" * 50)
    
    # –ü–æ–∏—Å–∫ –±–ª–æ–∫–æ–≤
    search_queries = ['—Ñ–æ—Ä–º–∞', '–≥–∞–ª–µ—Ä–µ—è', '–≤–∏–¥–µ–æ', '—Å–æ—Ü–∏–∞–ª—å']
    
    for query in search_queries:
        found_blocks = constructor.search_blocks(query)
        print(f"üîç –ü–æ–∏—Å–∫ '{query}': –Ω–∞–π–¥–µ–Ω–æ {len(found_blocks)} –±–ª–æ–∫–æ–≤")
        for block in found_blocks[:2]:  # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 2
            print(f"   ‚Ä¢ {block['name']} ({block['category']})")
    
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    print(f"\nüìÇ –ë–ª–æ–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
    for category in get_all_categories():
        category_blocks = constructor.get_blocks_by_category(category)
        print(f"   {category}: {len(category_blocks)} –±–ª–æ–∫–æ–≤")
    
    print()

def demo_custom_blocks():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –±–ª–æ–∫–æ–≤"""
    print("üé® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –±–ª–æ–∫–∏")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –±–ª–æ–∫–∞
    custom_block = {
        "name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç",
        "category": "interactive",
        "html": """
        <div class="custom-widget">
            <h3>{title}</h3>
            <div class="widget-content">
                <p>{description}</p>
                <button class="widget-btn" style="background: {button_color}">{button_text}</button>
            </div>
        </div>
        """,
        "css": """
        .custom-widget {
            border: 2px solid #007bff;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            text-align: center;
        }
        .widget-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            color: white;
            cursor: pointer;
            font-size: 16px;
        }
        """,
        "properties": ["title", "description", "button_text", "button_color"]
    }
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Å–∏—Å—Ç–µ–º—É
    from site_blocks.interactive import interactive_blocks
    interactive_blocks["custom_widget"] = custom_block
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –±–ª–æ–∫ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç'")
    print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {custom_block['category']}")
    print(f"   –°–≤–æ–π—Å—Ç–≤–∞: {', '.join(custom_block['properties'])}")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    widget = constructor.add_block_to_page('custom_widget')
    constructor.update_block_property(widget['id'], 'title', '–ú–æ–π –≤–∏–¥–∂–µ—Ç')
    constructor.update_block_property(widget['id'], 'description', '–≠—Ç–æ –º–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç!')
    constructor.update_block_property(widget['id'], 'button_text', '–ù–∞–∂–º–∏ –º–µ–Ω—è')
    constructor.update_block_property(widget['id'], 'button_color', '#28a745')
    
    print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –±–ª–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É")
    
    print()

def run_demo():
    """–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üé™ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –ë–õ–û–ö–û–í PROTHEMESRU")
    print("=" * 60)
    print()
    
    demo_basic_usage()
    demo_block_examples()
    demo_constructor_usage()
    demo_advanced_features()
    demo_export_features()
    demo_search_and_filter()
    demo_custom_blocks()
    
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 60)
    print("üìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    print("   ‚Ä¢ demo_page.json - –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    print("   ‚Ä¢ demo_exports/ - –ü–∞–ø–∫–∞ —Å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏")
    print()
    print("üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    run_demo() 